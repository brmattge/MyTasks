@model IEnumerable<MyTasks.Application.Models.TaskModel>
@{
    ViewData["Title"] = "Home Page";
}

<style>
    .transparent-button {
        background: none;
        border: none;
        cursor: pointer;
    }

    .separator {
        margin: 0 10px;
        color: #ccc;
    }

    .table > :not(:last-child) > :last-child > * {
        border-bottom-color: #dee2e6;
    }

    .swal-button--confirm {
        color: #fff;
        background-color: #0d6efd;
        border-color: #0d6efd;
    }

    .swal-button--confirm:not([disabled]):hover {
        color: #fff;
        background-color: #0b5ed7;
        border-color: #0a58ca;
    }

    .swal-button--cancel {
        color: #fff;
        background-color: #6c757d;
        border-color: #6c757d;
    }
    
    .swal-button--cancel:not([disabled]):hover {
        color: #fff;
        background-color: #5c636a;
        border-color: #565e64;
    }
</style>

<div class="text-start">
    <p>Hi, Bruno.</p>
</div>

<div class="table-responsive">
    <table class="table table-hover bg-white">
        <thead>
            <tr>
                <th colspan="7" style="padding: 1rem 1rem;">
                    <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#myModal" id="btn-create">Create</button>
                    <button type="button" class="btn btn-danger">Delete</button>
                </th>
            </tr>
            <tr>
                <th scope="col">Task</th>
                <th scope="col">Effort</th>
                <th scope="col">Remaining Work</th>
                <th scope="col">Remaining Time For Warning</th>
                <th scope="col">Completed Work</th>
                <th scope="col">Status</th>
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                @foreach (var item in Model)
                {
                    string status = item.Status != null ? item.Status : "-";

                    <tr id="row">
                        <td hidden>@item.Id</td>
                        <td class="align-middle">@item.Task</td>
                        <td class="align-middle">@item.Effort</td>
                        <td class="align-middle">@item.RemainingWork</td>
                        <td class="align-middle">@item.RemainingTimeForWarning</td>
                        <td class="align-middle">@item.CompletedWork</td>
                        <td class="align-middle">@status</td>
                        <td style="text-align: right;">
                            <button class="transparent-button fs-5">
                                <i class="bi bi-play-circle"></i>
                            </button>
                            <button class="transparent-button fs-5">
                                <i class="bi bi-pause-circle"></i>
                            </button>
                            <button class="transparent-button fs-5">
                                <i class="bi bi-check-circle"></i>
                            </button>
                            <span class="separator">|</span>
                            <button id="btn-edit" class="transparent-button fs-5">
                                <i class="bi bi-pencil"></i>
                            </button>
                            <button class="transparent-button fs-5" id="btn-delete">
                                <i class="bi bi-trash2"></i>
                            </button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="7" class="text-center">No results found.</td>
                </tr>
            }
        </tbody>
    </table>
</div>



<div class="modal fade" id="myModal" tabindex="-1" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row g-3">
                    <input type="hidden" id="inputId" />

                    <div class="col-12">
                        <label for="inputTask" class="form-label">Task</label>
                        <input type="text" class="form-control" id="inputTask">
                    </div>
                    <div class="col-md-6">
                        <label for="inputEffort" class="form-label">Effort</label>
                        <input type="number" class="form-control" id="inputEffort" min="0">
                    </div>
                    <div class="col-md-6">
                        <label for="inputRemainingWork" class="form-label">Remaining Work</label>
                        <input type="number" class="form-control" id="inputRemainingWork" min="0">
                    </div>
                    <div class="col-md-6">
                        <label for="inputRemainingTimeForWarning" class="form-label">Remaining Time For Warning</label>
                        <input type="text" class="form-control" id="inputRemainingTimeForWarning" placeholder="hh:mm">
                    </div>
                    <div class="col-md-6">
                        <label for="inputCompletedWork" class="form-label">Completed Work</label>
                        <input type="number" class="form-control" id="inputCompletedWork" min="0">
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChangesButton">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#inputRemainingTimeForWarning").on("input", function () {
                var inputValue = $(this).val();
                // Remove any non-numeric or colon characters
                inputValue = inputValue.replace(/[^0-9:]/g, "");
                // Limit the input to 5 characters
                if (inputValue.length > 5) {
                    inputValue = inputValue.substr(0, 5);
                }
                // Format the input value as hh:mm
                if (inputValue.length == 2 && $(this).val().length < 3) {
                    $(this).val(inputValue + ":");
                } else {
                    $(this).val(inputValue);
                }
                $(this).attr("placeholder", "hh:mm");
            }).on("keydown", function (event) {
                // Allow backspace key
                if (event.which == 8) {
                    var inputValue = $(this).val();
                    // Remove the last character
                    if (inputValue.length > 0) {
                        $(this).val(inputValue.slice(0, -1));
                    } else {
                        $(this).val("");
                    }
                    event.preventDefault();
                }
            });

            $("#btn-create").click(function () {
                $("#inputId").val("");
                $("#inputTask").val("");
                $("#inputEffort").val("");
                $("#inputRemainingWork").val("");
                $("#inputRemainingTimeForWarning").val("");
                $("#inputCompletedWork").val("");
            });

            $("#saveChangesButton").click(function () {
                var inputId = $('#inputId').val();
                var inputTask = $('#inputTask').val();
                var inputEffort = $('#inputEffort').val();
                var inputRemainingWork = $('#inputRemainingWork').val();
                var inputRemainingTimeForWarning = $('#inputRemainingTimeForWarning').val();
                var inputCompletedWork = $('#inputCompletedWork').val();

                var data = {
                    id: inputId,
                    task: inputTask,
                    effort: inputEffort,
                    remainingWork: inputRemainingWork,
                    remainingTimeForWarning: inputRemainingTimeForWarning,
                    completedWork: inputCompletedWork
                };

                if (data.id == "") {
                    $.ajax({
                        url: '/Home/Create',
                        type: 'POST',
                        data: data,
                        success: function (result) {
                            if (result.statusCode == 200) {
                                location.reload();
                            }
                            else {
                                swal({
                                    title: 'Error',
                                    text: 'There was an error while saving your changes',
                                    icon: 'error',
                                    buttons: false,
                                    timer: 2000
                                });
                            }

                        },
                        error: function (xhr, status, error) {
                            swal({
                                title: 'Error',
                                text: 'There was an error while saving your changes',
                                icon: 'error',
                                buttons: false,
                                timer: 2000
                            });
                        }
                    });
                }
                else {
                    $.ajax({
                        url: '/Home/Update',
                        type: 'PUT',
                        data: data,
                        success: function (result) {
                            if (result.statusCode == 200) {
                                location.reload();
                            }
                            else {
                                swal({
                                    title: 'Error',
                                    text: 'There was an error while saving your changes',
                                    icon: 'error',
                                    buttons: false,
                                    timer: 2000
                                });
                            }

                        },
                        error: function (xhr, status, error) {
                            swal({
                                title: 'Error',
                                text: 'There was an error while saving your changes',
                                icon: 'error',
                                buttons: false,
                                timer: 2000
                            });
                        }
                    });
                }
            });

            $(document).on('click', '#btn-edit', function () {
                var $row = $(this).closest('tr');
                var id = $row.find('td:nth-child(1)').text().trim();
                var task = $row.find('td:nth-child(2)').text().trim();
                var effort = $row.find('td:nth-child(3)').text().trim();
                var remainingWork = $row.find('td:nth-child(4)').text().trim();
                var remainingTimeForWarning = $row.find('td:nth-child(5)').text().trim();
                var completedWork = $row.find('td:nth-child(6)').text().trim();

                $('#inputId').val(id);
                $('#inputTask').val(task);
                $('#inputEffort').val(effort);
                $('#inputRemainingWork').val(remainingWork);
                $('#inputRemainingTimeForWarning').val(remainingTimeForWarning);
                $('#inputCompletedWork').val(completedWork);

                $('#myModal').modal('show');
            });

            $(document).on('click', '#btn-delete', function () {
                var $row = $(this).closest('tr');
                var id = $row.find('td:nth-child(1)').text().trim();

                swal({
                    title: "Are you sure?",
                    text: "Once deleted, you will not be able to recover this row!",
                    icon: "warning",
                    buttons: true
                }).then((confirmed) => {
                    if (confirmed) {
                        $.ajax({
                            url: '/Home/Delete',
                            type: 'DELETE',
                            data: { id: id },
                            success: function (result) {
                                if (result == 200) {
                                    $row.remove();

                                    var rowCount = $('table tbody tr').length;
                                    if (rowCount == 0) {
                                        $('table tbody').append('<tr><td colspan="7" class="text-center">No results found.</td></tr>');
                                    }
                                }
                                else {
                                    swal({
                                        title: 'Error',
                                        text: 'There was an error while saving your changes',
                                        icon: 'error',
                                        buttons: false,
                                        timer: 2000
                                    });
                                }
                            },
                            error: function (xhr, status, error) {
                                swal({
                                    title: 'Error',
                                    text: 'There was an error while saving your changes',
                                    icon: 'error',
                                    buttons: false,
                                    timer: 2000
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
}